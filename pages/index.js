import Head from 'next/head'
import { useContext, useEffect, useState } from 'react'
import { ethers } from 'ethers'

import Card from '../components/Card'

import { TransactionContext } from '../context/TransactionContext'
import contractABI from "../src/artifacts/contracts/Campaign.sol/CampaignFactory.json"
const contractAddress = '0x35cc3c9CDfCBD324e9de15947213a2D650a2dd35';
// const contractAddress = '0x5FbDB2315678afecb367f032d93F642f64180aa3';

export default function Home() {
  const { currentAccount } = useContext(TransactionContext);
  const [campaignsData, setCampaignsData] = useState([]);

  const Request = async () => {
    const provider = new ethers.providers.JsonRpcProvider(
      'https://speedy-nodes-nyc.moralis.io/1f78a0705fba1289cf96bf3b/polygon/mumbai'
    );

    const contract = new ethers.Contract(
      contractAddress,
      contractABI.abi,
      provider
    );

    const getAllCampaigns = contract.filters.campaignCreated();
    const AllCampaigns = await contract.queryFilter(getAllCampaigns);
    const AllData = AllCampaigns.map((e) => {
      return {
        title: e.args.title,
        image: e.args.imgURI,
        owner: e.args.owner,
        timeStamp: parseInt(e.args.timestamp),
        amount: ethers.utils.formatEther(e.args.requiredAmount),
        address: e.args.campaignAddress
      }
    });

    setCampaignsData(AllData);
  }
  useEffect(() => {
    Request();
  }, [])


  console.log('AllData', campaignsData)
  return (
    <div className=''>
      <Head>
        <title>FundRaiser</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {currentAccount && <div className='grid grid-cols-1 lg:grid-cols-2'>
        {/* title, amount, desc, date, account */}
        {campaignsData.map((data) => {
          return (
            <Card
              title={data.title}
              amount={data.amount}
              desc={data.owner}
              date={data.timeStamp}
              account={data.address}
              image={data.image}
              key={data.timeStamp}
            />
          )
        })}
      </div>}

      {!currentAccount && <div className="h-screen overflow-hidden w-full flex flex-col justify-center items-center inset-0  ">
        <p className='font-bold text-6xl'>Please Login</p>
        <p className='text-lg font-semibold mt-4'>Use Polygon Mumbai Testnet to login</p>
      </div>}

    </div>
  )
}

export async function getStaticProps() {
  const provider = new ethers.providers.JsonRpcProvider(
    'https://speedy-nodes-nyc.moralis.io/1f78a0705fba1289cf96bf3b/polygon/mumbai'
  );

  const contract = new ethers.Contract(
    contractAddress,
    contractABI.abi,
    provider
  );

  const getAllCampaigns = contract.filters.campaignCreated();
  const AllCampaigns = await contract.queryFilter(getAllCampaigns);
  const AllData = AllCampaigns.map((e) => {
    return {
      title: e.args.title,
      image: e.args.imgURI,
      owner: e.args.owner,
      timeStamp: parseInt(e.args.timestamp),
      amount: ethers.utils.formatEther(e.args.requiredAmount),
      address: e.args.campaignAddress
    }
  });

  return {
    props: {
      AllData
    }
  }
}
