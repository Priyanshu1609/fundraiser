import Head from 'next/head'
import { useContext, useEffect, useState } from 'react'
import { ethers } from 'ethers'
import Modal from 'react-modal'

import Card from '../components/Card'

Modal.setAppElement('#__next')

import { TransactionContext } from '../context/TransactionContext'
import contractABI from "../src/artifacts/contracts/Campaign.sol/CampaignFactory.json"
import TransactionLoader from '../components/TransactionLoader'
const contractAddress = '0x066a327b3aa3D23B4CdCf009d454FD7cE770c793';
// const contractAddress = '0x5FbDB2315678afecb367f032d93F642f64180aa3';

const customStyles = {
  content: {
    top: '50%',
    left: '50%',
    right: 'auto',
    bottom: 'auto',
    transform: 'translate(-50%, -50%)',
    backgroundColor: '#0a0b0d',
    padding: 0,
    border: 'none',
  },
  overlay: {
    backgroundColor: 'rgba(10, 11, 13, 0.75)',
  },
}

export default function Home() {
  const { currentAccount, setIsLoading, isLoading } = useContext(TransactionContext);
  const [campaignsData, setCampaignsData] = useState([]);

  const Request = async () => {
    if (!currentAccount) return;

    const provider = new ethers.providers.JsonRpcProvider(
      `${process.env.NEXT_PUBLIC_RPC_URL}`
    );

    const contract = new ethers.Contract(
      contractAddress,
      contractABI.abi,
      provider
    );
    setIsLoading(true);
    const getAllCampaigns = contract.filters.campaignCreated();
    const AllCampaigns = await contract.queryFilter(getAllCampaigns);
    let AllData = AllCampaigns.map((e) => {
      return {
        title: e.args.title,
        image: e.args.imgURI,
        owner: e.args.owner,
        timeStamp: parseInt(e.args.timestamp),
        amount: ethers.utils.formatEther(e.args.requiredAmount),
        address: e.args.campaignAddress
      }
    });
    AllData = AllData.reverse();

    setCampaignsData(AllData);
    setIsLoading(false);
  }
  useEffect(() => {
    Request();
  }, [currentAccount])


  console.log('AllData', campaignsData)
  return (
    <div className=''>
      <Head>
        <title>FundRaiser</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {currentAccount && <div className='grid grid-cols-1 lg:grid-cols-2'>
        {/* title, amount, desc, date, account */}
        {campaignsData.map((data) => {
          return (
            <Card
              title={data.title}
              amount={data.amount}
              desc={data.owner}
              date={data.timeStamp}
              account={data.address}
              image={data.image}
              key={data.timeStamp}
            />
          )
        })}
      </div>}

      {!currentAccount && <div className="h-screen overflow-hidden w-full flex flex-col justify-center items-center inset-0  ">
        <p className='font-bold text-6xl'>Please Login</p>
        <p className='text-lg font-semibold mt-4'>Use Polygon Mumbai Testnet to login</p>
      </div>}

      <Modal isOpen={isLoading} style={customStyles}>
        <TransactionLoader />
      </Modal>

    </div>
  )
}

